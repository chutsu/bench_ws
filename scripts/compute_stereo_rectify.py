import cv2
import numpy as np

# EuRoC
cam0_proj = np.array([[458.654, 0.0, 367.215],
                      [0.0, 457.296, 248.375],
                      [0.0, 0.0, 1.0]])
cam1_proj = np.array([[457.587, 0.0, 379.999],
                      [0.0, 456.134, 255.238],
                      [0.0, 0.0, 1]])
cam0_dist = np.array([-0.28340811, 0.07395907, 0.00019359, 1.76187114e-05, 0.0])
cam1_dist = np.array([-0.28368365, 0.07451284, -0.00010473, -3.555907e-05, 0.0])

# # kalibr
# cam0_proj = np.array([[459.01453118196645, 0.0,               366.3571490294547],
#                       [0.0,                457.7061957452046, 248.62459895511316],
#                       [0.0,                0.0,               1.0]])
# cam1_proj = np.array([[457.88674471074074, 0.0,                379.2287469528679],
#                       [0.0,                456.50788964495484, 255.6450362100199],
#                       [0.0,                0.0,                1.0]])
# cam0_dist = np.array([-0.287330481246602, 0.07759609647010943, 0.00030209025627091993, 4.7663398226923416e-05])
# cam1_dist = np.array([-0.28661972619139564, 0.077277401891847, 1.8327578207530492e-05, 2.4897607411678205e-05])

# euroc
# T_SC0 = np.array([[0.0148655429818, -0.999880929698, 0.00414029679422, -0.0216401454975],
#                   [0.999557249008, 0.0149672133247, 0.025715529948,  -0.064676986768],
#                   [-0.0257744366974, 0.00375618835797, 0.999660727178, 0.00981073058949],
#                   [0, 0, 0, 1]])
#
# T_SC1 = np.array([[0.0125552670891, -0.999755099723, 0.0182237714554, -0.0198435579556],
#                   [0.999598781151, 0.0130119051815, 0.0251588363115, 0.0453689425024],
#                   [-0.0253898008918, 0.0179005838253, 0.999517347078, 0.00786212447038],
#                   [0, 0, 0, 1]])

# autocal
# T_SC0 = np.array([
#     [0.0150978375346138, -0.999878429084474, 0.00389645394452559, -0.0164955290793582],
#     [0.999644228600544, 0.0151797666729295, 0.0219315049501352, -0.0675743864860987],
#     [-0.0219879859787293, 0.00356394939902611, 0.999751882587515, 0.00565949229200543],
#     [0, 0, 0, 1]
# ])
# T_SC1 = np.array([
#     [0.0123912474294644, -0.999746579071713, 0.0187945370134486, -0.0152819047538224],
#     [0.999705551322556, 0.0127785333405486, 0.0206281298359713, 0.0435913961168689],
#     [-0.020863068854006, 0.0185333947260772, 0.999610546982134, 0.0104368174469041],
#     [0, 0, 0, 1]
# ])

T_SC0 = np.array([
    [0.015088, -0.999879, 0.003891, -0.016820],
    [0.999645, 0.015170, 0.021901, -0.067456],
    [-0.021957, 0.003560, 0.999753, 0.005030],
    [0.000000, 0.000000, 0.000000, 1.000000]
])

T_SC1 = np.array([
    [0.012777, -0.999749, 0.018384, -0.015279],
    [0.999692, 0.013163, 0.021053, 0.042774],
    [-0.021290, 0.018109, 0.999609, 0.003157],
    [0.000000, 0.000000, 0.000000, 1.000000]
])

# # kalibr
# T_C0S = np.array([
#     [0.01496650221625856, 0.9996699324639489, -0.02088132991299131, 0.06866596603701511],
#     [-0.9998849881448637, 0.015014414167788204, 0.002139591022748003, -0.015907823174948457],
#     [0.0024524057488988452, 0.02084690611871645, 0.9997796718334099, -0.0024599422338853166],
#     [0.0, 0.0, 0.0, 1.0]
# ])
# T_C1S = np.array([
#     [0.012790549888821834, 0.9997018519687048, -0.02079925488769658, -0.04136947106384646],
#     [-0.9997879689982713, 0.01312181989143718, 0.015869306508114328, -0.015683960813687874],
#     [0.016137499182133364, 0.020591867644254483, 0.9996577194755554, -0.0028035136386968217],
#     [0.0, 0.0, 0.0, 1.0]
# ])

# T_SC0 = np.linalg.inv(T_C0S)
# T_SC1 = np.linalg.inv(T_C1S)

T_C0S = np.linalg.inv(T_SC0)
T_C0C1 = np.dot(T_C0S, T_SC1)
T_C1C0 = np.linalg.inv(T_C0C1)

image_size = (752, 480)
R = T_C1C0[0:3, 0:3]
t = T_C1C0[0:3, 3]

retval = cv2.stereoRectify(cam0_proj, cam0_dist,
                           cam1_proj, cam1_dist,
                           image_size, R, t,
                           alpha=0)

def print_vec(v):
    print("data: [" + ", ".join([str(x) for x in v]) + "]")

def print_mat3(A):
    a = A.flatten()
    s = """\
data: [{0}, {1}, {2},
       {3}, {4}, {5},
       {6}, {6}, {8}]
""".format(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8])
    print(s)

def print_mat34(A):
    a = A.flatten()
    s = """\
data: [{0}, {1}, {2}, {3},
       {4}, {5}, {6}, {7},
       {8}, {9}, {10}, {11}]
""".format(a[0], a[1], a[2], a[3],
	   a[4], a[5], a[6], a[7],
	   a[8], a[9], a[10], a[11])
    print(s)

def print_mat4(A):
    a = A.flatten()
    s = """\
data: [{0}, {1}, {2}, {3},
       {4}, {5}, {6}, {7},
       {8}, {9}, {10}, {11},
       {12}, {13}, {14}, {15}]
""".format(a[0], a[1], a[2], a[3],
	   a[4], a[5], a[6], a[7],
	   a[8], a[9], a[10], a[11],
	   a[12], a[13], a[14], a[15])
    print(s)


print("cam0_K")
print_mat3(cam0_proj)
print("")

print("cam0_D")
print_vec(cam0_dist)
print("")

print("cam1_K")
print_mat3(cam1_proj)
print("")

print("cam1_D")
print_vec(cam1_dist)
print("")


print("T_SC0:")
print_mat4(T_SC0)
print("")

print("R0:")
print_mat3(retval[0])
print("")

print("R1:")
print_mat3(retval[1])
print("")

print("P0:")
print_mat34(retval[2])
print("")

print("P1:")
print_mat34(retval[3])
