%YAML:1.0

#--------------------------------------------------------------------------------------------
# Camera Parameters. Adjust them!
#--------------------------------------------------------------------------------------------
Camera.type: "PinHole"

# Camera calibration and distortion parameters (OpenCV)
Camera.fx: 434.314661328
Camera.fy: 434.314661328
Camera.cx: 349.181537628
Camera.cy: 250.958629608

Camera.k1: 0.0
Camera.k2: 0.0
Camera.p1: 0.0
Camera.p2: 0.0

Camera.bFishEye: 0

Camera.width: 752
Camera.height: 480

# Camera frames per second
Camera.fps: 20.0

# stereo baseline times fx
Camera.bf: 46.3969863786

# Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale)
Camera.RGB: 1

# Close/Far threshold. Baseline times.
ThDepth: 35.0

#--------------------------------------------------------------------------------------------
# Stereo Rectification. Only if you need to pre-rectify the images.
# Camera.fx, .fy, etc must be the same as in LEFT.P
#--------------------------------------------------------------------------------------------
LEFT.height: 480
LEFT.width: 752
LEFT.D: !!opencv-matrix
   rows: 1
   cols: 5
   dt: d
   data: [-0.289905, 0.080473, 0.000349, 1e-06, 0.0]

LEFT.K: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [459.071514, 0.0, 366.186587, 0.0, 457.540994, 247.229143, 0.0, 0.0, 1.0]

LEFT.R:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0.999267862331573, -0.0045987470588214575, 0.037981453852864534, 0.004333659140162509, 0.9999656958729466, 0.007058787133130023, -0.03801261250881321, -0.006889020454530327, 0.9992535127220878]

LEFT.Rf:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: f
   data: [0.999267862331573, -0.0045987470588214575, 0.037981453852864534, 0.004333659140162509, 0.9999656958729466, 0.007058787133130023, -0.03801261250881321, -0.006889020454530327, 0.9992535127220878]

LEFT.P:  !!opencv-matrix
   rows: 3
   cols: 4
   dt: d
   data: [434.31466132832406, 0.0, 349.1815376281738, 0.0, 0.0, 434.31466132832406, 250.9586296081543, 0.0, 0.0, 0.0, 1.0, 0.0]

RIGHT.height: 480
RIGHT.width: 752
RIGHT.D: !!opencv-matrix
   rows: 1
   cols: 5
   dt: d
   data: [-0.283057, 0.073387, 9e-05, -5.7e-05, 0.0]

RIGHT.K: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [457.532882, 0.0, 377.851784, 0.0, 456.002198, 253.867307, 0.0, 0.0, 1.0]

RIGHT.R:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0.9997187494468214, -0.0062811221266207175, 0.022868526610036733, 0.006440492625580626, 0.9999554401051147, -0.006902018467542735, -0.022824155169979973, 0.007047361848020522, 0.999714655605168]

RIGHT.P:  !!opencv-matrix
   rows: 3
   cols: 4
   dt: d
   data: [434.31466132832406, 0.0, 349.1815376281738, -46.39698637862716, 0.0, 434.31466132832406, 250.9586296081543, 0.0, 0.0, 0.0, 1.0, 0.0]

#--------------------------------------------------------------------------------------------
# ORB Parameters
#--------------------------------------------------------------------------------------------

# ORB Extractor: Number of features per image
ORBextractor.nFeatures: 1200

# ORB Extractor: Scale factor between levels in the scale pyramid
ORBextractor.scaleFactor: 1.2

# ORB Extractor: Number of levels in the scale pyramid
ORBextractor.nLevels: 8

# ORB Extractor: Fast threshold
# Image is divided in a grid. At each cell FAST are extracted imposing a minimum response.
# Firstly we impose iniThFAST. If no corners are detected we impose a lower value minThFAST
# You can lower these values if your images have low contrast
ORBextractor.iniThFAST: 20
ORBextractor.minThFAST: 7

#--------------------------------------------------------------------------------------------
# Viewer Parameters
#--------------------------------------------------------------------------------------------
Viewer.KeyFrameSize: 0.05
Viewer.KeyFrameLineWidth: 1
Viewer.GraphLineWidth: 0.9
Viewer.PointSize: 2
Viewer.CameraSize: 0.08
Viewer.CameraLineWidth: 3
Viewer.ViewpointX: 0
Viewer.ViewpointY: -0.7
Viewer.ViewpointZ: -1.8
Viewer.ViewpointF: 500


